%div{"data-role" => "header"}
  %h1 New Search
%div{"data-role" => "content", :role => "main"}
  = form_tag(mobile_search_index_path, method: :post, remote: true, id: "mobile_search_form") do
    = render partial: "location"
    = render partial: "day_time"
    = render partial: "group"
    = render partial: "open_closed"
    = render partial: "special_focus"
    = render partial: "access"
    = render partial: "language"
    - search_text = "Show #{pluralize(@options.count, "meetings")}"
    = button_to search_text, mobile_search_index_path, {:method => :post, :class => "meeting-search-button", "data-role" => "button", "data-icon" => "arrow-r", "data-iconpos" => "right", "rel" => "external"}
  %button{ "class" => "meeting-search-hot-button", "data-role" => "button", "data-icon" => "arrow-r", "data-iconpos" => "right", "id" => "one-time" }
    = "Quick Search (Upcoming Nearby)"
= render "footer"

:javascript
  history.pushState("new_search", "New Search", "new");

  function main(){
    $('form').change(function(){
      var optionsUrl = '#{get_new_options_mobile_search_index_path(
        fuck: "__PARAMS__", format: :js)}';
      var formData = $('#mobile_search_form').serialize();
      optionsUrl = optionsUrl.replace('fuck', formData);
      $.getScript(optionsUrl);
      return;
    });

    var citiesMenu = $('#cities');


    var submitButton = $('[type="submit"]');
    $(".city-text").on("click", function() {
      if ($(this).val() == "(Optional search text)"){
          $(this).val("")
          $(this).removeClass("city-text-default")
        }
    });

    $(".group-text").on("click", function() {
      if ($(this).val() == "(Optional search text)"){
          $(this).val("")
          $(this).removeClass("group-text-default")
        }
    });

    $(".meeting-search-hot-button").on("click", function(){
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          "lat": position.coords.latitude,
          "lng": position.coords.longitude
        };

        var createUrl = '#{here_and_now_mobile_search_index_path(
          lat: "__LAT__", lng: "__LNG__", format: :js)}';
        createUrl = createUrl.replace("__LAT__", pos["lat"]).replace("__LNG__", pos["lng"]);

        $.getScript(createUrl);
        return false;
      });
      } else {
        alert("Geolocation cancelled or unsupported");
        return false;
       }
    });

    $(".here-box").on("click", function(){
      submitButton.button('disable'); //wait for lat and lng
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        $(".main-lat").val(pos["lat"]);
        $(".main-lng").val(pos["lng"]);
        console.log("lat is: " + pos["lat"] + " lng is: " + pos["lng"]);
        submitButton.button('enable');
      });
      } else {
        submitButton.button('enable');
      }
    }); //here-box on click (proximity without here and now)




    // function DropDownMenu(args) {
    //   this.name = args["name"];
    //   this.originalSelections = args["choices"];
    //   this.defaultChoice = args["defaultChoice"];
    //   this.hook = args["hook"];
    // }

    // D

    // DropDownMenu.prototype.



    %h3 Day/Time
    = select_tag(:day, options_for_select(@options.days), {class: "menu-element"})



















  }

  $(document).ready( main() );
